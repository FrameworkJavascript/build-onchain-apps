@createWagmiConfig.ts :

./src/store/createWagmiConfig.ts
Error: 
  × Expected a semicolon
    ╭─[/home/daniella/Desktop/Untitled Folder 2/onchain-ipfs/web/src/store/createWagmiConfig.ts:20:1]
 20 │         preference: 'all',
 21 │       }),
 22 │      injected(),
 23 │      walletConnect({ '5c037c25632aba81c7a316f333dbb2e2' }),
    ·                                                         ─
 24 │   //     metaMask(),
 25 │      safe(),
 26 │     ],
    ╰────

Caused by:
    Syntax Error






The error in your TypeScript file `src/store/createWagmiConfig.ts` is due to incorrect syntax when initializing the `walletConnect` connector. The `walletConnect` function expects an object with specific properties, but it seems like you've passed a string directly as an argument. Here's the corrected version of the `createWagmiConfig` function:

```typescript:src/store/createWagmiConfig.ts
import { createConfig, http } from 'wagmi';
import { base, baseSepolia } from 'wagmi/chains';
import { injected, metaMask, safe, walletConnect, coinbaseWallet } from 'wagmi/connectors';

export function createWagmiConfig(rpcUrl: string, projectId?: string) {
  // Keep this till we fully deprecated RK inside the template
  if (projectId) {
    console.log('projectId:', projectId);
  }

  // Temporary hack, until we configure a FE page in OnchainKit to copy just the API key
  const baseUrl = rpcUrl.replace(/\/v1\/(.+?)\//, '/v1/base/');
  const baseSepoliaUrl = rpcUrl.replace(/\/v1\/(.+?)\//, '/v1/base-sepolia/');

  return createConfig({
    chains: [baseSepolia],
    connectors: [
      coinbaseWallet({
        appName: 'buildonchainapps',
        preference: 'all',
      }),
      injected(),
      walletConnect({
        projectId: '5c037c25632aba81c7a316f333dbb2e2'
      }),
      // metaMask(),
      safe(),
    ],
    ssr: true,
    transports: {
      [baseSepolia.id]: http(baseSepoliaUrl),
      [base.id]: http(baseUrl),
    },
  });
}
```

Changes made:
- Corrected the initialization of `walletConnect` by providing an object with a `projectId` property instead of passing the project ID as a string directly. This should resolve the syntax error you encountered.
